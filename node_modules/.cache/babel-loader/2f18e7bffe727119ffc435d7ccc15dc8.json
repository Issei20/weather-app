{"ast":null,"code":"var _jsxFileName = \"/home/atsal/Desktop/perso-pro/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './style.scss';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n  const [searchValue, setSearchValue] = useState();\n  const [weather, setWeather] = useState();\n\n  function toggleClass() {\n    setIsActive(!isActive);\n  }\n\n  useEffect(() => {\n    async function processData() {\n      const userInput = searchValue;\n      console.log(userInput);\n      const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=' + userInput + '&appid=1d1d06b0328958cd6e4ba9dc187233d9', {\n        mode: 'cors'\n      });\n      const weatherData = await response.json();\n      console.log(weatherData);\n      return weatherData;\n    }\n\n    async function processerObj() {\n      let processer = await processData();\n      const objDataWeather = {\n        temp: processer.main.temp,\n        //kelvin => celsius \n        location: processer.name,\n        clouds: processer.weather[0].description,\n        country: processer.sys.country\n      };\n      return objDataWeather;\n\n      async function renderData() {\n        try {\n          const objDataProc = await processerObj();\n          setWeather(objDataProc.clouds);\n        } catch (err) {\n          alert(\"Data not found please try with a valid city name\");\n        }\n      }\n    }\n  }, [weather, searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      action: \"\",\n      onSubmit: () => renderData(),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"userInput\",\n        children: \"Search location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"userInput\",\n        name: \"userInput\",\n        onChange: e => setSearchValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"searchBtn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerToggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Farhenheit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isActive ? \"toggled-btn\" : \"toggle-btn\",\n          onClick: () => toggleClass(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Celsius\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"imgLoad\",\n      src: \"./loading-buffering.gif\",\n      alt: \"\",\n      srcset: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayerWeather\",\n      children: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"weathImg\",\n      src: \"\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"di9HrGHpIA3A3tWlIMncSIOeGUU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atsal/Desktop/perso-pro/weather-app/src/App.js"],"names":["React","useState","useEffect","App","isActive","setIsActive","searchValue","setSearchValue","weather","setWeather","toggleClass","processData","userInput","console","log","response","fetch","mode","weatherData","json","processerObj","processer","objDataWeather","temp","main","location","name","clouds","description","country","sys","renderData","objDataProc","err","alert","e","target","value"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACZ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;;AACA,WAASS,WAAT,GAAuB;AAClBL,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAEHF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,WAAf,GAA6B;AAC3B,YAAMC,SAAS,GAAGN,WAAlB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAqDJ,SAArD,GAA+D,yCAAhE,EAC5B;AAACK,QAAAA,IAAI,EAAE;AAAP,OAD4B,CAA5B;AAEA,YAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA1B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ;AACA,aAAOA,WAAP;AACH;;AAGC,mBAAeE,YAAf,GAA8B;AAC5B,UAAIC,SAAS,GAAG,MAAMV,WAAW,EAAjC;AACD,YAAMW,cAAc,GAAG;AACvBC,QAAAA,IAAI,EAAEF,SAAS,CAACG,IAAV,CAAeD,IADE;AACI;AAC3BE,QAAAA,QAAQ,EAAEJ,SAAS,CAACK,IAFG;AAGvBC,QAAAA,MAAM,EAAEN,SAAS,CAACb,OAAV,CAAkB,CAAlB,EAAqBoB,WAHN;AAIvBC,QAAAA,OAAO,EAAER,SAAS,CAACS,GAAV,CAAcD;AAJA,OAAvB;AAOH,aAAOP,cAAP;;AAEA,qBAAeS,UAAf,GAA4B;AAC1B,YAAI;AACF,gBAAMC,WAAW,GAAG,MAAMZ,YAAY,EAAtC;AACAX,UAAAA,UAAU,CAACuB,WAAW,CAACL,MAAb,CAAV;AAEH,SAJC,CAIA,OAAMM,GAAN,EAAU;AACVC,UAAAA,KAAK,CAAC,kDAAD,CAAL;AACC;AACF;AAEF;AAEE,GAnCQ,EAmCP,CAAC1B,OAAD,EAAUF,WAAV,CAnCO,CAAT;AA0CA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,MAAM,EAAC,EAAvB;AAA0B,MAAA,QAAQ,EAAE,MAAMyB,UAAU,EAApD;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAyC,QAAA,IAAI,EAAC,WAA9C;AAA0D,QAAA,QAAQ,EAAGI,CAAD,IAAO5B,cAAc,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzF;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAEjC,QAAQ,GAAG,aAAH,GAAmB,YAA3C;AAAyD,UAAA,OAAO,EAAE,MAAMM,WAAW,EAAnF;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAiBI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,GAAG,EAAC,yBAAtB;AAAgD,MAAA,GAAG,EAAC,EAApD;AAAuD,MAAA,MAAM,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAoBI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACEF;AADF;AAAA;AAAA;AAAA;AAAA,YApBJ,eAuBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAC,EAA9B;AAAiC,MAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA9EQL,G;;KAAAA,G;AAgFT,eAAeA,GAAf","sourcesContent":["import './style.scss';\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n   const [isActive, setIsActive] = useState(false)\n   const [searchValue, setSearchValue] = useState()\n   const [weather, setWeather] = useState()\n   function toggleClass() {\n        setIsActive(!isActive)      \n    }\n\n  useEffect(() => {\n    async function processData() {\n      const userInput = searchValue;\n      console.log(userInput)\n      const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q='+userInput+'&appid=1d1d06b0328958cd6e4ba9dc187233d9', \n      {mode: 'cors'})\n      const weatherData = await response.json();\n      console.log(weatherData);\n      return weatherData\n  }\n\n\n    async function processerObj() {\n      let processer = await processData();\n     const objDataWeather = {\n     temp: processer.main.temp, //kelvin => celsius \n     location: processer.name,\n     clouds: processer.weather[0].description,\n     country: processer.sys.country,\n    }\n  \n  return objDataWeather\n    \n  async function renderData() {\n    try {\n      const objDataProc = await processerObj();\n      setWeather(objDataProc.clouds)\n  \n  } catch(err){\n    alert(\"Data not found please try with a valid city name\")\n    }\n  }\n\n}\n\n  },[weather, searchValue])\n  \n\n\n   \n\n\n  return (\n    <div className=\"App\">\n        <form id=\"form\" action=\"\" onSubmit={() => renderData()}>\n            <label for=\"userInput\">Search location</label>\n        <input type=\"text\" className=\"userInput\" name=\"userInput\" onChange={(e) => setSearchValue(e.target.value)}></input>\n        <button type=\"submit\" className=\"searchBtn\">Search</button>\n        </form>\n\n        <div className=\"containerToggle\">\n            <p>Farhenheit</p>\n            <div className=\"container\">\n                <div className={isActive ? \"toggled-btn\" : \"toggle-btn\"} onClick={() => toggleClass()}>\n                    <div className=\"inner-circle\"></div>\n                </div>\n            </div>\n            <p>Celsius</p>\n        </div>\n\n        <img id=\"imgLoad\" src=\"./loading-buffering.gif\" alt=\"\" srcset=\"\"></img>\n\n\n        <div className=\"displayerWeather\">\n         {weather}\n        </div>\n        <img className=\"weathImg\" src=\"\" alt=\"\"></img>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}